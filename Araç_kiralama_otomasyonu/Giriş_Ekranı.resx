<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p50AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>