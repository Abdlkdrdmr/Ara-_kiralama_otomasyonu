<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>